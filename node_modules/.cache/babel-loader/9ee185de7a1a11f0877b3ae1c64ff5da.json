{"ast":null,"code":"var _jsxFileName = \"/home/afborda/Documentos/React/Modulo 2/Aprendendo/React-Lista-Repo/src/pages/Main/index.js\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport api from \"../../services/api\";\nimport logo from \"../../assets/logo.png\";\nimport { Container, Form } from \"./styles\";\nimport CompareList from \"../../components/CompareList/index\";\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      repositoryError: false,\n      repositoryInput: \"\",\n      repositories: []\n    };\n\n    this.handleAddRepository = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const _ref = await api.get(\"/repos/\".concat(this.state.repositoryInput)),\n              repository = _ref.data;\n\n        repository.lastCommit = moment(repository.pushed_at).fromNow();\n        this.setState({\n          repositoryInput: \"\",\n          repositories: [...this.state.repositories, repository],\n          repositoryError: false\n        });\n        const localRepositories = await this.getLocalRepositories();\n        await localStorage.setItem(\"@GitCompare:repositories\", JSON.stringify([...localRepositories, repository]));\n      } catch (err) {\n        this.setState({\n          repositoryError: true\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.getLocalRepositories = async () => JSON.parse((await localStorage.getItem(\"@GitCompare:repositories\"))) || [];\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.setState({\n      loading: false,\n      repositories: await this.getLocalRepositories()\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Github Compare\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Form, {\n      withError: this.state.repositoryError,\n      onSubmit: this.handleAddRepository,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Usu\\xE1rio/reposit\\xF3rio\",\n      value: this.state.repositoryInput,\n      onChange: e => this.setState({\n        repositoryInput: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-pulse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : \"OK\")), React.createElement(CompareList, {\n      repositories: this.state.repositories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/afborda/Documentos/React/Modulo 2/Aprendendo/React-Lista-Repo/src/pages/Main/index.js"],"names":["React","Component","moment","api","logo","Container","Form","CompareList","Main","state","loading","repositoryError","repositoryInput","repositories","handleAddRepository","e","preventDefault","setState","get","repository","data","lastCommit","pushed_at","fromNow","localRepositories","getLocalRepositories","localStorage","setItem","JSON","stringify","err","parse","getItem","componentDidMount","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport api from \"../../services/api\";\n\nimport logo from \"../../assets/logo.png\";\n\nimport { Container, Form } from \"./styles\";\n\nimport CompareList from \"../../components/CompareList/index\";\n\nexport default class Main extends Component {\n  state = {\n    loading: false,\n    repositoryError: false,\n    repositoryInput: \"\",\n    repositories: []\n  };\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    this.setState({\n      loading: false,\n      repositories: await this.getLocalRepositories()\n    });\n  }\n\n  handleAddRepository = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    try {\n      const { data: repository } = await api.get(\n        `/repos/${this.state.repositoryInput}`\n      );\n      repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n      this.setState({\n        repositoryInput: \"\",\n        repositories: [...this.state.repositories, repository],\n        repositoryError: false\n      });\n      const localRepositories = await this.getLocalRepositories();\n\n      await localStorage.setItem(\n        \"@GitCompare:repositories\",\n        JSON.stringify([...localRepositories, repository])\n      );\n    } catch (err) {\n      this.setState({ repositoryError: true });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  getLocalRepositories = async () =>\n    JSON.parse(await localStorage.getItem(\"@GitCompare:repositories\")) || [];\n\n  render() {\n    return (\n      <Container>\n        <img src={logo} alt=\"Github Compare\" />\n\n        <Form\n          withError={this.state.repositoryError}\n          onSubmit={this.handleAddRepository}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Usuário/repositório\"\n            value={this.state.repositoryInput}\n            onChange={e => this.setState({ repositoryInput: e.target.value })}\n          />\n          <button type=\"submit\">\n            {this.state.loading ? (\n              <i className=\"fa fa-spinner fa-pulse\" />\n            ) : (\n              \"OK\"\n            )}\n          </button>\n        </Form>\n\n        <CompareList repositories={this.state.repositories} />\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}